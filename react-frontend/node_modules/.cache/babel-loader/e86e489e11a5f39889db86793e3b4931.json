{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lewisrodriguez/Projects/Brain/react-flask-app/src/components/Appointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"react-datetime/css/react-datetime.css\";\nimport Datetime from 'react-datetime';\nimport moment from \"moment\";\n\nfunction Appointment(props) {\n  _s();\n\n  //State\n  const [data, setData] = useState({\n    patientName: '',\n    reason: '',\n    gender: 'male',\n    prefferedDate: new Date(),\n    endDate: new Date(),\n    dateOfBirth: '',\n    phoneNumber: '',\n    providerId: props.location.state\n  }); //Variables\n\n  var yesterday = moment().subtract(1, \"day\");\n\n  function valid(current) {\n    return current.isAfter(yesterday);\n  }\n\n  useEffect(() => {\n    const selectedDoctor = props.location.state;\n    console.log(\"Selected: \" + selectedDoctor);\n  }, []); //Functions  \n\n  const onChangeName = e => {\n    setData({ ...data,\n      patientName: e.target.value\n    });\n  };\n\n  const onChangeReason = e => {\n    setData({ ...data,\n      reason: e.target.value\n    });\n  };\n\n  const onChangeGender = e => {\n    setData({ ...data,\n      gender: e.target.value\n    });\n  };\n\n  const onChangePrefferedDate = date => {\n    setData({ ...data,\n      prefferedDate: date,\n      endDate: date\n    });\n  };\n\n  const onChangeDateOfBirth = date => {\n    setData({ ...data,\n      dateOfBirth: date.toDate()\n    });\n  };\n\n  const onChangePhoneNumber = e => {\n    setData({ ...data,\n      phoneNumber: e.target.value.replace(/\\D/, '')\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!data.reason || !data.prefferedDate || !data.patientName || !data.gender || !data.dateOfBirth || !data.phoneNumber) {\n      alert(\"Please fill all the fields\");\n    } else {\n      fetch('/appointment', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(info => {\n        console.log(\"Info: \" + info);\n      });\n      setData({\n        patientName: '',\n        reason: '',\n        gender: '',\n        prefferedDate: new Date(),\n        endDate: new Date(),\n        dateOfBirth: '',\n        phoneNumber: '',\n        providerId: ''\n      });\n      props.history.push('/');\n    }\n  }; //Render\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(Datetime, {\n        inputProps: {\n          readOnly: true\n        },\n        value: data.prefferedDate,\n        onChange: onChangePrefferedDate,\n        style: {\n          padding: '5px'\n        },\n        isValidDate: valid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Reason:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.reason,\n          onChange: onChangeReason,\n          style: {\n            padding: '5px',\n            width: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Patient Name:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.firstName,\n          onChange: onChangeName,\n          style: {\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Gender:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: data.gender,\n          onChange: onChangeGender,\n          style: {\n            padding: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"male\",\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"female\",\n            children: \"F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Date of Birth:\", /*#__PURE__*/_jsxDEV(Datetime, {\n        inputProps: {\n          readOnly: true\n        },\n        value: data.dateOfBirth,\n        timeFormat: false,\n        onChange: onChangeDateOfBirth,\n        style: {\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: label,\n      children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.phoneNumber,\n          onChange: onChangePhoneNumber,\n          style: {\n            padding: '5px'\n          },\n          maxLength: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn\",\n      style: buttonStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n} //Styles\n\n\n_s(Appointment, \"p7scMOf3f0fBuUZ2nd0YecjxmOQ=\");\n\n_c = Appointment;\nconst label = {\n  margin: '5px'\n};\nconst buttonStyle = {\n  background: '#FFF',\n  color: '#000',\n  border: '1px solid',\n  padding: '5px 9px',\n  borderRadius: '10',\n  margin: 'auto',\n  float: 'left',\n  marginTop: '20px'\n};\nexport default Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["/Users/lewisrodriguez/Projects/Brain/react-flask-app/src/components/Appointment.js"],"names":["React","useState","Datetime","moment","Appointment","props","data","setData","patientName","reason","gender","prefferedDate","Date","endDate","dateOfBirth","phoneNumber","providerId","location","state","yesterday","subtract","valid","current","isAfter","useEffect","selectedDoctor","console","log","onChangeName","e","target","value","onChangeReason","onChangeGender","onChangePrefferedDate","date","onChangeDateOfBirth","toDate","onChangePhoneNumber","replace","handleSubmit","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","result","json","info","history","push","display","flexDirection","label","readOnly","padding","width","firstName","buttonStyle","margin","background","color","border","borderRadius","float","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"react-datetime/css/react-datetime.css\";\nimport Datetime from 'react-datetime';\nimport moment from \"moment\";\n\nfunction Appointment(props) {\n\n    //State\n    const [data, setData] = useState({\n        patientName: '',\n        reason: '',\n        gender: 'male',\n        prefferedDate: new Date(),\n        endDate: new Date(),\n        dateOfBirth: '',\n        phoneNumber: '',\n        providerId: props.location.state\n    })\n\n    //Variables\n    var yesterday = moment().subtract(1, \"day\");\n    function valid(current) {\n        return current.isAfter(yesterday);\n    }\n\n    useEffect(() => {\n        const selectedDoctor = props.location.state;\n        console.log(\"Selected: \" + selectedDoctor);\n    \n      }, []);\n\n    //Functions  \n    const onChangeName = (e) => {\n        setData({\n            ...data,\n            patientName: e.target.value\n        })\n    };\n\n    const onChangeReason = (e) => {\n        setData({\n            ...data,\n            reason: e.target.value\n        })\n    }\n\n    const onChangeGender = (e) => {\n        setData({\n            ...data,\n            gender: e.target.value\n        });\n    }\n\n    const onChangePrefferedDate = (date) => {\n        setData({\n            ...data,\n            prefferedDate: date,\n            endDate: date\n        })\n    }\n\n    const onChangeDateOfBirth = (date) => {\n        setData({\n            ...data,\n            dateOfBirth: date.toDate()\n        })\n    }\n\n    const onChangePhoneNumber = (e) => {\n        setData({\n            ...data,\n            phoneNumber: e.target.value.replace(/\\D/, '')\n        });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!data.reason || !data.prefferedDate || !data.patientName || !data.gender || !data.dateOfBirth || !data.phoneNumber) {\n            alert(\"Please fill all the fields\");\n        }\n        else {\n            fetch('/appointment', {\n                method: \"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n                .then((result) => result.json())\n                .then((info) => { console.log(\"Info: \" + info); })\n            setData({\n                patientName: '',\n                reason: '',\n                gender: '',\n                prefferedDate: new Date(),\n                endDate: new Date(),\n                dateOfBirth: '',\n                phoneNumber: '',\n                providerId: ''\n            });\n            props.history.push('/');\n        }\n    }\n\n    //Render\n    return (\n        <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column' }}>\n            <label style={label}>\n                Date:\n            <Datetime inputProps={{ readOnly: true }} value={data.prefferedDate} onChange={onChangePrefferedDate} style={{ padding: '5px' }} isValidDate={valid} />\n            </label>\n            <label style={label}>\n                Reason:\n            <div>\n                    <input type=\"text\" value={data.reason} onChange={onChangeReason} style={{ padding: '5px', width: '400px' }} />\n                </div>\n            </label>\n            <label style={label}>\n                Patient Name:\n            <div>\n                    <input type=\"text\" value={data.firstName} onChange={onChangeName} style={{ padding: '5px' }} />\n                </div>\n            </label>\n            <label style={label}>\n                Gender:\n            <div>\n                    <select value={data.gender} onChange={onChangeGender} style={{ padding: '5px' }}>\n                        <option value=\"male\">M</option>\n                        <option value=\"female\">F</option>\n                    </select>\n                </div>\n            </label>\n            <label style={label}>\n                Date of Birth:\n            <Datetime inputProps={{ readOnly: true }} value={data.dateOfBirth} timeFormat={false} onChange={onChangeDateOfBirth} style={{ padding: '5px' }} />\n            </label>\n            <label style={label}>\n                Phone Number:\n            <div>\n                    <input type=\"text\" value={data.phoneNumber} onChange={onChangePhoneNumber} style={{ padding: '5px' }} maxLength=\"10\" />\n                </div>\n            </label>\n            <input type=\"submit\" value=\"Submit\" className=\"btn\" style={buttonStyle} />\n        </form>\n\n    );\n}\n\n//Styles\nconst label = {\n    margin: '5px'\n}\n\nconst buttonStyle = {\n    background: '#FFF',\n    color: '#000',\n    border: '1px solid',\n    padding: '5px 9px',\n    borderRadius: '10',\n    margin: 'auto',\n    float: 'left',\n    marginTop: '20px'\n}\n\nexport default Appointment;"]},"metadata":{},"sourceType":"module"}