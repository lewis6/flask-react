{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lewisrodriguez/Projects/Brain/react-flask-app/src/components/AddDoctor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction AddDoctor(props) {\n  _s();\n\n  //State\n  const [data, setData] = useState([{\n    name: 'Name',\n    value: '',\n    error: ''\n  }, {\n    name: 'Specialty',\n    value: '',\n    error: ''\n  }]); //Sets the name to the user input of the name field\n\n  const onChangeName = e => {\n    setData({ ...data,\n      name: e.target.value\n    });\n  }; //Sets the specialty to the user input of the specialty field\n\n\n  const onChangeSpecialty = e => {\n    setData({ ...data,\n      specialty: e.target.value\n    });\n  }; //Make a call to the backend to add a new doctor and clear the data that the user entered\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetch('/register', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.json()).then(info => {\n      console.log(\"Info: \" + info);\n    });\n    setData({\n      name: '',\n      specialty: ''\n    });\n    props.history.push('/');\n  };\n\n  const handleInputChange = (idx, e) => {\n    const target = e.target;\n    const name = target.name;\n    console.log(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: data.map((input, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: [input.name, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.value,\n          onChange: e => handleInputChange(idx, e),\n          style: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), input.error && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: input.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddDoctor, \"4eIr0LN9VLr5SxXKFkTOUQdgWhs=\");\n\n_c = AddDoctor;\nconst input = {\n  padding: '5px'\n};\nconst label = {\n  margin: '5px'\n};\nconst buttonStyle = {\n  background: '#FFF',\n  color: '#000',\n  border: '1px solid',\n  padding: '5px 9px',\n  borderRadius: '10',\n  margin: 'auto',\n  float: 'left',\n  marginTop: '20px'\n};\nexport default AddDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDoctor\");","map":{"version":3,"sources":["/Users/lewisrodriguez/Projects/Brain/react-flask-app/src/components/AddDoctor.js"],"names":["React","useState","AddDoctor","props","data","setData","name","value","error","onChangeName","e","target","onChangeSpecialty","specialty","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","result","json","info","console","log","history","push","handleInputChange","idx","display","flexDirection","map","input","padding","label","margin","buttonStyle","background","color","border","borderRadius","float","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction AddDoctor(props) {\n\n  //State\n  const [data, setData] = useState(\n      [\n        {name: 'Name', value: '', error: ''},\n        {name: 'Specialty', value: '', error: ''}\n      ])\n \n\n  //Sets the name to the user input of the name field\n  const onChangeName = (e) => {\n    setData({\n        ...data,\n        name: e.target.value\n    })\n  }\n\n  //Sets the specialty to the user input of the specialty field\n  const onChangeSpecialty = (e) => {\n      setData({\n        ...data,\n        specialty: e.target.value\n    })\n  }\n\n  //Make a call to the backend to add a new doctor and clear the data that the user entered\n  const onSubmit = (e) => {\n      e.preventDefault();\n      fetch('/register' , {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      .then((result) => result.json())\n      .then((info) => { console.log(\"Info: \" + info); })\n      setData({\n          name: '',\n          specialty: ''\n      });\n      props.history.push('/');\n  }\n\n  const handleInputChange = (idx, e) => {\n    const target = e.target;\n    const name = target.name;\n    console.log(name)\n  }\n\n  return (\n    <form  onSubmit={ onSubmit } style={{ display: 'flex', flexDirection: 'column'}}>\n        {/* <label style={label}>\n            Name:\n            <div>\n              <input type=\"text\" value={data.name} onChange={ onChangeName } style={input}/>\n            </div>\n        </label>\n        <label style={label}>\n            Specialty:\n            <div>\n              <input type=\"text\" value={data.specialty} onChange={ onChangeSpecialty } style={input}/>\n            </div>\n        </label>\n        <input type=\"submit\" value=\"Submit\" style={buttonStyle}/> */}\n        {data.map((input, idx) => (\n          <label htmlFor=\"\">{input.name}\n          <div>\n            <input type=\"text\" value={input.value} onChange={ (e) => handleInputChange(idx, e)} style={input}/>\n            {input.error && <span>{input.error}</span>}\n          </div>\n          </label>\n        ))}\n    </form>\n  );\n}\n\nconst input = {\n  padding: '5px',\n}\n\nconst label = {\n  margin: '5px'\n}\n\nconst buttonStyle = {\n  background: '#FFF',\n  color: '#000',\n  border: '1px solid',\n  padding: '5px 9px',\n  borderRadius: '10',\n  margin: 'auto',\n  float: 'left',\n  marginTop: '20px'  \n}\n\nexport default AddDoctor;"]},"metadata":{},"sourceType":"module"}